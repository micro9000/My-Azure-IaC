pool:
  vmImage: ubuntu-latest

variables:
  - group: SharedResources
  - name: ServiceConnection
    value: "Pay-As-You-Go"
  - name: INFRA_DIR
    value: "Temporary-Build-Agent/Azure-IaC"

# https://learn.microsoft.com/en-us/azure/devops/pipelines/process/pipeline-triggers?view=azure-devops
resources:
  pipelines:
  - pipeline: buildSharedResources # Name of the pipeline resource.
    source: build-shared-resources # The name of the pipeline referenced by this pipeline resource.
    trigger: 
      branches:
        include: 
        - main

jobs:
  - job: ApplyAzureInfra
    steps:
    - checkout: self
      displayName: 'Checkout repository'

    - task: Bash@3
      displayName: "Dump environment variables and list files"
      inputs:
        workingDirectory: '$(Pipeline.Workspace)'
        targetType: inline
        script: |
          printenv
          ls -la

    - task: TerraformInstaller@1
      displayName: Install Terraform Latest
      inputs:
        terraformVersion: Latest
    
    - task: AzureCLI@2
      displayName: "Initialize Terraform"
      inputs:
        azureSubscription: $(ServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: '$(Pipeline.Workspace)/$(INFRA_DIR)'
        useGlobalConfig: false
        inlineScript: |
          terraform init \
          -backend-config="resource_group_name=$(resourceGroupName)" \
          -backend-config="storage_account_name=$(tfStateStorage)" \
          -backend-config="container_name=$(tmpBuildAgentTFContainerName)" \
          -backend-config="key=temp-build-agent.tfstate"

    - task: AzureCLI@2
      displayName: "Terraform Plan"
      inputs:
        azureSubscription: $(ServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: '$(Pipeline.Workspace)/$(INFRA_DIR)'
        useGlobalConfig: false
        inlineScript: |
          terraform plan

    - task: AzureCLI@2
      displayName: "Terraform Apply"
      inputs:
        azureSubscription: $(ServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: '$(Pipeline.Workspace)/$(INFRA_DIR)'
        useGlobalConfig: false
        inlineScript: |
          terraform apply -auto-approve