# https://julie.io/writing/terraform-on-azure-pipelines-best-practices/
pool:
  vmImage: ubuntu-latest

variables:
  - group: SharedResources
  - group: GenerateAgentImageCreds
  - name: ServiceConnection
    value: "Pay-As-You-Go"
  - name: INFRA_DIR
    value: "Temporary-Build-Agent/Azure-IaC"

# https://learn.microsoft.com/en-us/azure/devops/pipelines/process/pipeline-triggers?view=azure-devops
resources:
  pipelines:
  - pipeline: buildSharedResources # Name of the pipeline resource.
    source: build-shared-resources # The name of the pipeline referenced by this pipeline resource.
    trigger: 
      branches:
        include: 
        - main

jobs:
  - job: ApplyAzureInfra
    steps:
    - checkout: self
      displayName: 'Checkout repository'

    - task: Bash@3
      displayName: "Dump environment variables and list files"
      inputs:
        workingDirectory: '$(Pipeline.Workspace)'
        targetType: inline
        script: |
          printenv
          ls -la

    - task: TerraformInstaller@1
      displayName: Install Terraform Latest
      inputs:
        terraformVersion: Latest
    
    - bash: |
        terraform init \
          -backend-config="resource_group_name=$(TF_RESOURCE_GROUP)" \
          -backend-config="storage_account_name=$(TF_REMOTE_BACKEND_STORAGE)" \
          -backend-config="container_name=$(TF_CONTAINER_NAME)" \
          -backend-config="key=$(TF_KEY)"
      displayName: "Initialize Terraform"
      workingDirectory: '$(Pipeline.Workspace)/$(INFRA_DIR)'
      env:
        TF_RESOURCE_GROUP:          $(resourceGroupName)
        TF_REMOTE_BACKEND_STORAGE:  $(tfStateStorage)
        TF_CONTAINER_NAME:          $(tmpBuildAgentTFContainerName)
        TF_KEY:                     "temp-build-agent.tfstate"

    - bash: |
        terraform plan
      displayName: "Initialize Terraform"
      workingDirectory: '$(Pipeline.Workspace)/$(INFRA_DIR)'
      env:
        ARM_SUBSCRIPTION_ID: $(SubscriptionId)
        ARM_CLIENT_ID:       $(ClientId)
        ARM_CLIENT_SECRET:   $(ClientSecret)
        ARM_TENANT_ID:       $(TenantId)

    - bash: |
        terraform apply -auto-approve
      displayName: "Initialize Terraform"
      workingDirectory: '$(Pipeline.Workspace)/$(INFRA_DIR)'
      env:
        ARM_SUBSCRIPTION_ID: $(SubscriptionId)
        ARM_CLIENT_ID:       $(ClientId)
        ARM_CLIENT_SECRET:   $(ClientSecret)
        ARM_TENANT_ID:       $(TenantId)