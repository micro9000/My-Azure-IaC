# Terraform Best Practices ref: https://julie.io/writing/terraform-on-azure-pipelines-best-practices/
# trigger:
#   branches:
#     include:
#     - main

pool:
  vmImage: ubuntu-latest

variables:
  - group: SharedResources
  - group: GenerateAgentImageCreds
  - name: ServiceConnection
    value: "Pay-As-You-Go"
  - name: SOURCE_DIR
    value: $(Build.SourcesDirectory)
  - name: INFRA_DIR
    value: "Temporary-Build-Agent/Azure-IaC"

jobs:
  - job: ApplyAzureInfra
    steps:

    - task: Bash@3
      displayName: "Dump environment variables and list files"
      inputs:
        workingDirectory: '$(SOURCE_DIR)'
        targetType: inline
        script: |
          printenv
          ls -la

    - task: TerraformInstaller@1
      displayName: Install Terraform Latest
      inputs:
        terraformVersion: Latest
  
    - task: AzureCLI@2
      displayName: 'Get TF State Storage Access Key'
      inputs:
        azureSubscription: $(ServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false
        inlineScript: |
          tfStateStorageKey=$(az storage account keys list -g $(resourceGroupName) -n $(tfStateStorage) --query [0].value -o tsv)
          echo "##vso[task.setvariable variable=tfStateStorageAccessKey;issecret=true]$tfStateStorageKey"

    - bash: |
        terraform init \
          -backend-config="resource_group_name=$TF_RESOURCE_GROUP" \
          -backend-config="storage_account_name=$TF_REMOTE_BACKEND_STORAGE" \
          -backend-config="container_name=$TF_CONTAINER_NAME" \
          -backend-config="key=$TF_KEY" \
          -backend-config="access_key=$TF_STORAGE_ACCESS_KEY"
      displayName: "Initialize Terraform"
      workingDirectory: '$(SOURCE_DIR)/$(INFRA_DIR)'
      env:
        TF_RESOURCE_GROUP:          $(resourceGroupName)
        TF_REMOTE_BACKEND_STORAGE:  $(tfStateStorage)
        TF_CONTAINER_NAME:          $(tmpBuildAgentTFContainerName)
        TF_KEY:                     "temp-build-agent.tfstate"
        TF_STORAGE_ACCESS_KEY:      $(tfStateStorageAccessKey)
        vmss_admin_password:        $(vmss_admin_password)

    - bash: |
        terraform plan
      displayName: "Terraform Plan"
      workingDirectory: '$(SOURCE_DIR)/$(INFRA_DIR)'
      env:
        ARM_SUBSCRIPTION_ID: $(SubscriptionId)
        ARM_CLIENT_ID:       $(ClientId)
        ARM_CLIENT_SECRET:   $(ClientSecret)
        ARM_TENANT_ID:       $(TenantId)

    - bash: |
        terraform apply -auto-approve
      displayName: "Terraform Apply"
      workingDirectory: '$(SOURCE_DIR)/$(INFRA_DIR)'
      env:
        ARM_SUBSCRIPTION_ID: $(SubscriptionId)
        ARM_CLIENT_ID:       $(ClientId)
        ARM_CLIENT_SECRET:   $(ClientSecret)
        ARM_TENANT_ID:       $(TenantId)